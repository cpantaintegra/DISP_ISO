<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/template/platform/MainTamplate.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:pe="http://primefaces.org/ui/extensions">
    <ui:define name="head">
        <title>Mantenimiento Cliente</title>    
    </ui:define>
    <ui:define name="body">
        <!--<ui:insert name="dialog">
            <ui:include src="../dispensario/disp_registro_cliente.xhtml"/>
        </ui:insert>-->
        <ui:insert name="header">
            <ui:include src="../template/platform/header.xhtml"/>
            <script type="text/javascript">
                PrimeFaces.locales['es'] = {
                    closeText: 'Cerrar',
                    prevText: 'Anterior',
                    nextText: 'Siguiente',
                    monthNames: ['Enero','Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                    monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun','Jul','Ago','Sep','Oct','Nov','Dic'],
                    dayNames: ['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'],
                    dayNamesShort: ['Dom','Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'],
                    dayNamesMin: ['D','L','M','X','J','V','S'],
                    weekHeader: 'Semana',
                    firstDay: 1,
                    isRTL: false,
                    showMonthAfterYear: false,
                    yearSuffix: '',
                    timeOnlyTitle: 'Sólo hora',
                    timeText: 'Tiempo',
                    hourText: 'Hora',
                    minuteText: 'Minuto',
                    secondText: 'Segundo',
                    currentText: 'Fecha actual',
                    ampm: false,
                    month: 'Mes',
                    week: 'Semana',
                    day: 'Día',
                    today: 'Hoy',
                    clear: 'Claro',
                    allDayText : 'Todo el día',
                    messages: {  //optional for Client Side Validation
                        'javax.faces.component.UIInput.REQUIRED': '{0}: Error de validación: se necesita un valor.',
                        'javax.faces.converter.IntegerConverter.INTEGER': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
                        'javax.faces.converter.IntegerConverter.INTEGER_detail': '{2}: \'{0}\' debe ser un número entre -2147483648 y 2147483647. Ejemplo: {1}',
                        'javax.faces.converter.DoubleConverter.DOUBLE': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
                        'javax.faces.converter.DoubleConverter.DOUBLE_detail': '{2}: \'{0}\' debe ser un número entre 4.9E-324 y 1.7976931348623157E308  Ejemplo: {1}',
                        'javax.faces.converter.BigDecimalConverter.DECIMAL': '{2}: \'{0}\' debe ser un número decimal positivo o negativo.',
                        'javax.faces.converter.BigDecimalConverter.DECIMAL_detail': '{2}: \'{0}\' debe ser un número decimal positivo o negativo formado por cero o más dígitos, que pueden incluir a continuación una coma decimal y una fracción.  Ejemplo: {1}',
                        'javax.faces.converter.BigIntegerConverter.BIGINTEGER': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
                        'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos. Ejemplo: {1}',
                        'javax.faces.converter.ByteConverter.BYTE': '{2}: \'{0}\' debe ser un número entre 0 y 255.',
                        'javax.faces.converter.ByteConverter.BYTE_detail': '{2}: \'{0}\' debe ser un número entre 0 y 255.  Ejemplo: {1}',
                        'javax.faces.converter.CharacterConverter.CHARACTER': '{1}: \'{0}\' debe ser un carácter válido.',
                        'javax.faces.converter.CharacterConverter.CHARACTER_detail': '{1}: \'{0}\' debe ser un carácter ASCII válido.',
                        'javax.faces.converter.ShortConverter.SHORT': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
                        'javax.faces.converter.ShortConverter.SHORT_detail': '{2}: \'{0}\' debe ser un número entre -32768 y 32767 Ejemplo: {1}',
                        'javax.faces.converter.BooleanConverter.BOOLEAN': '{1}: \'{0}\' debe ser \'true\' o \'false\'',
                        'javax.faces.converter.BooleanConverter.BOOLEAN_detail': '{1}: \'{0}\' debe ser \'true\' o \'false\'.  Cualquier valor diferente a \'true\' se evaluará como \'false\'.',
                        'javax.faces.validator.LongRangeValidator.MAXIMUM': '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
                        'javax.faces.validator.LongRangeValidator.MINIMUM': '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
                        'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE': '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}.',
                        'javax.faces.validator.LongRangeValidator.TYPE={0}': 'Error de validación: el valor no tiene el tipo correcto.',
                        'javax.faces.validator.DoubleRangeValidator.MAXIMUM': '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
                        'javax.faces.validator.DoubleRangeValidator.MINIMUM': '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
                        'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE': '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}',
                        'javax.faces.validator.DoubleRangeValidator.TYPE={0}': 'Error de validación: el valor no tiene el tipo correcto.',
                        'javax.faces.converter.FloatConverter.FLOAT': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
                        'javax.faces.converter.FloatConverter.FLOAT_detail': '{2}: \'{0}\' debe ser un número entre 1.4E-45 y 3.4028235E38  Ejemplo: {1}',
                        'javax.faces.converter.DateTimeConverter.DATE': '{2}: \'{0}\' no se ha podido reconocer como fecha.',
                        'javax.faces.converter.DateTimeConverter.DATE_detail': '{2}: \'{0}\' no se ha podido reconocer como fecha. Ejemplo: {1}',
                        'javax.faces.converter.DateTimeConverter.TIME': '{2}: \'{0}\' no se ha podido reconocer como hora.',
                        'javax.faces.converter.DateTimeConverter.TIME_detail': '{2}: \'{0}\' no se ha podido reconocer como hora. Ejemplo: {1}',
                        'javax.faces.converter.DateTimeConverter.DATETIME': '{2}: \'{0}\' no se ha podido reconocer como fecha y hora.',
                        'javax.faces.converter.DateTimeConverter.DATETIME_detail': '{2}: \'{0}\' no se ha podido reconocer como fecha y hora. Ejemplo: {1}',
                        'javax.faces.converter.DateTimeConverter.PATTERN_TYPE': '{1}: debe especificarse el atributo \'pattern\' o \'type\' para convertir el valor \'{0}\'', 
                        'javax.faces.converter.NumberConverter.CURRENCY': '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa.',
                        'javax.faces.converter.NumberConverter.CURRENCY_detail': '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa. Ejemplo: {1}',
                        'javax.faces.converter.NumberConverter.PERCENT': '{2}: \'{0}\' no se ha podido reconocer como porcentaje.',
                        'javax.faces.converter.NumberConverter.PERCENT_detail': '{2}: \'{0}\' no se ha podido reconocer como porcentaje. Ejemplo: {1}',
                        'javax.faces.converter.NumberConverter.NUMBER': '{2}: \'{0}\' no se ha podido reconocer como fecha.',
                        'javax.faces.converter.NumberConverter.NUMBER_detail': '{2}: \'{0}\' no es un número. Ejemplo: {1}',
                        'javax.faces.converter.NumberConverter.PATTERN': '{2}: \'{0}\' no es un patrón numérico.',
                        'javax.faces.converter.NumberConverter.PATTERN_detail': '{2}: \'{0}\' no es un patrón numérico. Ejemplo: {1}',
                        'javax.faces.validator.LengthValidator.MINIMUM': '{1}: Error de validación: el largo es inferior que el mínimo permitido de \'{0}\'',
                        'javax.faces.validator.LengthValidator.MAXIMUM': '{1}: Error de validación: el largo es mayor que el máximo permitido de \'{0}\'',
                        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET': 'Se debe establecer el patrón de Regex.',
                        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail': 'El patrón Regex debe establecerse en un valor no vacío.',
                        'javax.faces.validator.RegexValidator.NOT_MATCHED': 'El patrón Regex no coincide',
                        'javax.faces.validator.RegexValidator.NOT_MATCHED_detail': 'El patrón Regex de \'{0}\' no coincide',
                        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION': 'Error en expresión regular.',
                        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail': 'Error en expresión regular, \'{0}\'',
                        //optional for bean validation integration in client side validation
                        'javax.faces.validator.BeanValidator.MESSAGE': '{0}',
                        'javax.validation.constraints.AssertFalse.message': 'debe ser falso',
                        'javax.validation.constraints.AssertTrue.message': 'debe ser verdadero',
                        'javax.validation.constraints.DecimalMax.message': 'debe ser menor que o igual a {0}',
                        'javax.validation.constraints.DecimalMin.message': 'debe ser mayor que o igual a {0}',
                        'javax.validation.constraints.Digits.message': 'valor numérico fuera de los límites',
                        'javax.validation.constraints.Future.message': 'debe ser una fecha futura',
                        'javax.validation.constraints.Max.message': 'debe ser menor que o igual a {0}',
                        'javax.validation.constraints.Min.message': 'debe ser mayor que o igual a {0}',
                        'javax.validation.constraints.NotNull.message': 'no debe ser nulo',
                        'javax.validation.constraints.Null.message': 'debe ser nulo',
                        'javax.validation.constraints.Past.message': 'debe ser una fecha pasada',
                        'javax.validation.constraints.Pattern.message': 'debe coincidir con "{0}"',
                        'javax.validation.constraints.Size.message': 'el tamaño debe estar entre {0} y {1}'
                    }
                };
            </script>
        </ui:insert>
        <div class="container-fluid">
            <h:form id="forma" class="form-horizontal" >
                <p:growl id="mensajesGrowl" showDetail="true" life="8000" />
                <p:commandButton value="Nuevo Registro" icon="pi pi-arrow-down" onclick="PF('wdlgIngresar').show();" actionListener="#{cliente.redireccionar()}" update=":frmIng" rendered="#{!cliente.ingresar}"/> 
                <br/>
                <p:dataTable id="dtDatos" widgetVar="consultaWidget" value="#{cliente.all}" selectionMode="single" reflow="true" lazy="true" resizableColumns="true"
                             var="cli" rowKey="#{cli.idCliente}" paginator="true" paginatorPosition="both" scrollable="true" 
                             paginatorTemplate="#{messages.tem_paginator}" currentPageReportTemplate="#{messages.tem_page_report}" style="width:100%;"
                             rowsPerPageTemplate="#{messages.num_page_size_tem}" rows="#{messages.num_page_size}" emptyMessage="#{messages.lbl_no_data_found}" rendered="#{!cliente.consultar}">

                    <p:ajax event="rowSelect" onstart="PF('wdlgIngresar').show();" listener="#{cliente.onRowDblClckSelect}" update=":frmIng" global="true" disabled="#{cliente.editar}"/>

                    <f:facet name="header">
                        <p:outputPanel>
                            <h:outputText value="Búsqueda por: Nombres, Apellidos y Cédula " />
                            <p:inputText id="globalFilter" title="Presione ENTER para filtrar los datos" style="width:150px; text-transform: uppercase;" maxlength="50"
                                         onkeypress=" if (event.which == 13 || event.keyCode == 13) {PF('consultaWidget').filter()}"
                                         value="#{cliente.filtroConsulta}"  />  
                            <p:spacer width="5px;" />
                            <p:commandButton icon="fa fa-search" oncomplete="PF('consultaWidget').filter()" />
                        </p:outputPanel>
                    </f:facet>

                    <p:column headerText="#Documento" filterBy="#{cli.numDocumento}" filterMatchMode="contains" filterStyle="display:none" width="200" >
                        <h:outputText value="#{cli.numDocumento}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Tipo Documento" filterMatchMode="exact" filterBy="#{cli.tipoDocumento}" filterStyle="display:none" width="200" >
                        <f:facet name="filter">
                            <p:selectOneMenu value="#{cliente.tipoDocumentoObj}" onchange="PF('consultaWidget').filter()" effect="clip" filter="true"  filterMatchMode="contains" autoWidth="false" styleClass="custom-filter" converter="ConverterGeneric">
                                <f:selectItems value="#{cliente.listaTipoDocumento}" var="tp" itemLabel="#{tp.detalle}" itemValue="#{tp}"/>
                            </p:selectOneMenu>
                        </f:facet>
                        <p:outputLabel value="#{cli.tipoDocumento}" style="#{(cli.estado=='A'?'':'color: red')}">
                            <f:converter converterId="tipoDocumentoConverter"/>
                        </p:outputLabel>
                    </p:column>
                    <p:column headerText="Nombres" filterBy="#{cli.nombre}" filterMatchMode="contains" filterStyle="display:none" width="200" >
                        <h:outputText value="#{cli.nombre}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Apellido paterno" filterBy="#{cli.apaterno}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.apaterno}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Apellido materno" filterBy="#{cli.amaterno}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.amaterno}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Móvil" filterBy="#{cli.celular}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.celular}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Convencional" filterBy="#{cli.telefono}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.telefono}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Dirección" filterBy="#{cli.direccion}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.direccion}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Correo" filterBy="#{cli.email}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.email}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Fecha de nacimiento" filterBy="#{cli.fechaNacimiento}" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.fechaNacimiento.toLocaleString()}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Sexo" filterMatchMode="exact" filterStyle="display:none" width="200"><!--filterBy="{cli.sexo}"-->
                        <f:facet name="filter">
                            <p:selectOneMenu value="#{cliente.sexoObj}" onchange="PF('consultaWidget').filter()" effect="clip" filter="true" filterMatchMode="exact" autoWidth="false" styleClass="custom-filter" converter="ConverterGeneric">
                                <f:selectItems value="#{cliente.listaSexo}" var="sexo" itemLabel="#{sexo.detalle}" itemValue="#{sexo}"/>
                            </p:selectOneMenu>
                        </f:facet>
                        <p:outputLabel value="#{cli.sexo}" style="#{(cli.estado=='A'?'':'color: red')}">
                            <f:converter converterId="sexoConverter"/>
                        </p:outputLabel>
                    </p:column>
                    <p:column headerText="Estado Civil" filterMatchMode="exact" filterStyle="display:none" width="200"><!--filterBy="{cli.estadoCivil}"-->
                        <f:facet name="filter">
                            <p:selectOneMenu value="#{cliente.estadoCivilObj}" onchange="PF('consultaWidget').filter()" effect="clip" filter="true" filterMatchMode="contains" autoWidth="false" styleClass="custom-filter" converter="ConverterGeneric">
                                <f:selectItems value="#{cliente.listaEstadoCivil}" var="estCivil" itemLabel="#{estCivil.detalle}" itemValue="#{estCivil}"/>
                            </p:selectOneMenu>
                        </f:facet>
                        <p:outputLabel value="#{cli.estadoCivil}" style="#{(cli.estado=='A'?'':'color: red')}">
                            <f:converter converterId="estadoCivilConverter"/>
                        </p:outputLabel>
                    </p:column>
                    <p:column headerText="Estado" filterMatchMode="exact" filterBy="#{cli.estado}" filterStyle="display:none" width="200">
                        <f:facet name="filter">
                            <p:selectOneMenu value="#{cliente.estadoObj}" onchange="PF('consultaWidget').filter()" effect="clip" filter="true" filterMatchMode="contains" autoWidth="false" styleClass="custom-filter" converter="ConverterGeneric">
                                <f:selectItems value="#{cliente.listaEstado}" var="estado" itemLabel="#{estado.detalle}" itemValue="#{estado}"/>
                            </p:selectOneMenu>
                        </f:facet>
                        <p:outputLabel value="#{cli.estado}" style="#{(cli.estado=='A'?'':'color: red')}">
                            <f:converter converterId="estadoConverter"/>
                        </p:outputLabel>
                    </p:column>
                    <p:column headerText="Usuario Ingreso" filterMatchMode="contains" filterStyle="display:none" width="200">
                        <h:outputText value="#{cli.usuarioIngreso}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Fecha Ingreso" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.fechaIngreso.toLocaleString()}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Usuario Modificación" filterMatchMode="contains" filterStyle="display:none" width="200">
                        <h:outputText value="#{cli.usuarioModificacion}" title="#{cli.usuarioModificacion}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Fecha Modificación" filterMatchMode="contains" filterStyle="display:none" width="300">
                        <h:outputText value="#{cli.fechaModificacion.toLocaleString()}" title="#{cli.fechaModificacion}" style="#{(cli.estado=='A'?'':'color: red')}"/>
                    </p:column>
                    <p:column headerText="Eliminar" width="200" rendered="#{!cliente.eliminarBl}"> 
                        <p:commandButton value="Eliminar" onclick="PF('wdlgConfirmacion').show();" >
                            <f:setPropertyActionListener value="#{cli}" target="#{cliente.dispCliente}" />
                        </p:commandButton>
                    </p:column>
                </p:dataTable>   

                <p:dialog header="Confirmación" widgetVar="wdlgConfirmacion" id="dlgConfirmacion"> 
                    <h:form>
                        <p:commandButton value="Si" actionListener="#{cliente.eliminar()}" oncomplete="PF'wdlgConfirmacion'.hide();" update=":forma:mensajesGrowl"/>
                        <p:commandButton value="No" immediate="true"  oncomplete="PF'wdlgConfirmacion'.hide();"/>
                    </h:form>
                </p:dialog>               
            </h:form>
            
            <p:dialog id="dlgIngresar" header="Cliente" widgetVar="wdlgIngresar">
                <h:form id="frmIng" style="text-align: center">
                    <h:panelGrid columns="4" style="text-align: left">
                        <p:outputLabel for="ingNombre" value="Nombre: "/>
                        <p:inputText id="ingNombre" required="true" value="#{cliente.dispCliente.nombre}"/>     

                        <p:outputLabel for="ingAPaterno" value="Apellido Paterno: "/>
                        <p:inputText id="ingAPaterno" required="true" value="#{cliente.dispCliente.apaterno}"/> 

                        <p:outputLabel for="ingAMaterno" value="Apellido Materno: "/>
                        <p:inputText id="ingAMaterno" required="true" value="#{cliente.dispCliente.amaterno}"/> 

                        <p:outputLabel value="Tipo Documento:"/>
                        <p:selectOneMenu style="width:190px" value="#{cliente.dispCliente.tipoDocumento}" id="ingTipoPersona">
                            <f:selectItem itemValue="C" itemLabel="Cedula"/>
                            <f:selectItem itemValue="R" itemLabel="RUC"/>
                            <f:selectItem itemValue="P" itemLabel="Pasaporte"/>
                        </p:selectOneMenu> 

                        <p:outputLabel for="ingDocumento" value="Numero Documento: "/>
                        <p:inputText id="ingDocumento" required="true" value="#{cliente.dispCliente.numDocumento}"/>

                        <p:outputLabel for="ingFechaNac" value="Fecha Nacimiento: "/>
                        <p:calendar id="ingFechaNac" placeholder="Seleccione Fecha" title="Fecha Nacmiento" yearRange="c-100:c+100" pagedate="1/1/90" locale="es" navigator="true" required="true" value="#{cliente.dispCliente.fechaNacimiento}"/>

                        <p:outputLabel for="ingMovil" value="Móvil: "/>
                        <p:inputText id="ingMovil" required="true" value="#{cliente.dispCliente.celular}"/>

                        <p:outputLabel for="ingConvencional" value="Convencional: "/>
                        <p:inputText id="ingConvencional" required="false" value="#{cliente.dispCliente.telefono}"/>

                        <p:outputLabel for="ingDireccion" value="Dirección Domiciliaria: "/>
                        <p:inputText id="ingDireccion" required="false" value="#{cliente.dispCliente.direccion}"/>

                        <p:outputLabel for="ingCorreo" value="Correo: "/>
                        <p:inputText id="ingCorreo" required="true" value="#{cliente.dispCliente.email}"/>

                        <p:outputLabel for="ingOcupacion" value="Ocupación: "/>
                        <p:inputText id="ingOcupacion" value="#{cliente.dispCliente.ocupacion}"/>

                        <p:outputLabel for="ingResponsable" value="Persona responsable: "/>
                        <p:inputText id="ingResponsable" value="#{cliente.dispCliente.personaResponsable}"/>

                        <p:outputLabel value="Sexo:"/>
                        <p:selectOneMenu style="width:190px" value="#{cliente.dispCliente.sexo}" id="ingSexo">
                            <f:selectItem itemValue="M" itemLabel="Masculino"/>
                            <f:selectItem itemValue="F" itemLabel="Femenino"/>
                        </p:selectOneMenu> 

                        <p:outputLabel value="Estado Civil:"/>
                        <p:selectOneMenu style="width:190px" value="#{cliente.dispCliente.estadoCivil}" id="ingEstadoCivil">
                            <f:selectItem itemValue="S" itemLabel="Soltero"/>
                            <f:selectItem itemValue="C" itemLabel="Casado"/>
                            <f:selectItem itemValue="D" itemLabel="Divorciado"/>
                            <f:selectItem itemValue="V" itemLabel="Viudo"/>
                            <f:selectItem itemValue="O" itemLabel="Concubinato"/>
                            <f:selectItem itemValue="E" itemLabel="Separación en proceso judicial"/>
                        </p:selectOneMenu>

                        <p:outputLabel value="Origen"/>
                        <p:selectOneMenu style="width:190px" value="#{cliente.origenObj}" id="ingOrigen" converter="ConverterGeneric" >
                            <f:selectItems value="#{cliente.listDispOrigen}" var="orig" itemLabel="#{orig.nombre}" itemValue="#{orig}"/>
                        </p:selectOneMenu>
                        
                        <p:outputLabel value="Estado:"/>
                        <p:selectOneMenu style="width:190px" value="#{cliente.dispCliente.estado}" id="ingEstado">
                            <f:selectItem itemValue="A" itemLabel="Activo"/>
                            <f:selectItem itemValue="I" itemLabel="Inactivo"/>
                        </p:selectOneMenu> 
                    </h:panelGrid>
                    <p:commandButton value="#{cliente.labelMant}" actionListener="#{cliente.guardar()}" update=":forma:mensajesGrowl,:forma,:frmIng" oncomplete="PF('wdlgIngresar').hide();" process=":frmIng"/>
                </h:form>
            </p:dialog>
        </div>
    </ui:define>
</ui:composition>




